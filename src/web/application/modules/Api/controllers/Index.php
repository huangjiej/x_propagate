<?php
use Core\Api;
use Upload\Driver\Qiniu;
/**
 * @name IndexController
 * @author xuebingwang
 * @desc 默认控制器
 * @see http://www.php.net/manual/en/class.yaf-controller-abstract.php
*/
class IndexController extends Api {
    function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

    }
    // 房老师感悟 参数几条 api/index/teachertwitter
    public function teacherTwitterAction() {
        $offset = I('offset', 0);
        //分页查询
        if ($offset > 0) {
            $limit = I('limit');
            $list = M('t_document(a)')->select(
                [
                    '[>]t_document_article(b)' => ['a.id'=>'id']
                ],
                [
                    'a.*',
                    'b.*'
                ],
                [
                    'AND' => [
                        'a.status[>]'=>0,
                        'a.category_id'=> [47,48]
                    ],
                    'LIMIT'=> [$offset,$limit],
                    "ORDER" => "a.create_time DESC",]
            );
        } else {
            //普通查询
            $list = $list = M('t_document(a)')->select(
                [
                    '[>]t_document_article(b)' => ['a.id'=>'id']
                ],
                [
                    'a.*',
                    'b.*'
                ],
                [
                    'AND' => [
                        'a.status[>]'=>0,
                        'a.category_id'=> [47,48]
                    ],
                    'LIMIT'=>I('limit', '6'),
                    "ORDER" => "a.create_time DESC",
                ]
            );//M('t_teacher_news(cn)')->select(['cn.*'],['LIMIT'=>I('limit', '2'),'status'=>1, "ORDER" => "cn.id DESC",]);
        }

        foreach ($list as &$v) {
            $v['cover_id'] = imageView2($v['cover_id'],360, 160);
            $v['insert_time'] = time_format($v['create_time'], 'Y-m-d');
            $v['title'] = subtext($v['title'], 14);

        }
        $this->ajaxReturn($list);
    }

    // 房老师动态 参数几条 api/index/teachertwitter
    public function ganwuAction() {
        $offset = I('offset', 0);
        //分页查询
        $limit = I('limit');
        $list = M('t_document(a)')->select(
            [
                '[>]t_document_article(b)' => ['a.id'=>'id']
            ],
            [
                'a.*',
                'b.*'
            ],
            [
                'AND' => [
                    'a.status[>]'=>0,
                    'a.category_id'=> [46]
                ],
                'LIMIT'=> [$offset,$limit],
                "ORDER" => "a.create_time DESC",]
        );

        foreach ($list as &$v) {
            $v['cover_id'] = imageView2($v['cover_id'],360,160);
            $v['insert_time'] = time_format($v['create_time'], 'Y-m-d');
            $v['title'] = subtext($v['title'], 14);
        }
        
        $this->ajaxReturn($list);
    }

    // 俱乐部精彩 参数几条 api/index/amazing
    public function amazingAction() {
        $offset = I('offset', 0);
        //分页查询
        $limit = I('limit');
        $list = M('t_document(a)')->select(
            [
                '[>]t_document_article(b)' => ['a.id'=>'id']
            ],
            [
                'a.*',
                'b.*'
            ],
            [
                'AND' => [
                    'a.status[>]'=>0,
                    'a.category_id'=> [45]
                ],
                'LIMIT'=> [$offset,$limit],
                "ORDER" => "a.create_time DESC",]
        );

        foreach ($list as &$v) {
            $v['cover_id'] = imageView2($v['cover_id'],360,160);
            $v['insert_time'] = time_format($v['create_time'], 'Y-m-d');
            $v['title'] = subtext($v['title'], 14);
        }

        $this->ajaxReturn($list);
    }


    public function usersAction() {
//        $users = M('t_order(a)')->select(
//            [
//                '[>]t_wx_user(b)' => ['a.wx_id'=>'wx_id'],
//                '[>]t_product(c)' => ['a.product_id' => 'id']
//            ],
//            [
//                'a.*',
//                'b.*',
//                'c.main_pic',
//            ],
//            [
//                'a.order_type' => 2,
//                'GROUP' => 'a.wx_id',
//                'HAVING' => [
//                    'AND' => [
//                        'a.order_status' => OrderModel::STATUS_COMPLETED,
//                        'a.pay_status' => OrderModel::PAY_STATUS_PAYD,
//                    ]
//                ],
//                'LIMIT' => 7,
//                'ORDER' => 'a.amount DESC'
//            ]
//        );
        $users = M()->query('SELECT
                          a.*,
                          b.*,
                          c.main_pic
                        FROM (SELECT
                                *
                              FROM t_order
                              WHERE order_type = 2 AND order_status = \'OK#\' AND pay_status = 1
                              ORDER BY t_order.amount DESC
                             )
                          AS a LEFT JOIN t_wx_user AS b ON a.wx_id = b.wx_id
                          LEFT
                          JOIN t_product AS c ON a.product_id = c.id
                        GROUP BY a.wx_id
                        ORDER BY a.amount DESC 
                        LIMIT 7

              ')->fetchAll();;
        if (is_array($users)) {
            foreach ($users as &$user) {
                $user['main_pic'] = imageView2($user['main_pic'], 30,30);
            }

            $this->success('读取数据成功', '', ['users'=>$users]);
        } else {
            $this->error('读取数据失败!');
        }
    }
    
    //返回所有礼物
    public function giftsAction() {
        $gifts = M('t_product')->select(
            [
                '*'
            ],
            [
                'AND' => [
                    'status'=>1,
                    'type'=>2
                ]
            ]
        );

        if ($gifts) {
            foreach ($gifts as &$gift) {
                $gift['main_pic'] = imageView2($gift['main_pic'],53,53);
                $gift['price'] = price_convert($gift['cur_price']);
                $gift['cur_price'] = price_format($gift['cur_price']);
            }

            $this->success('读取数据成功', '', ['gifts'=>$gifts]);
        } else {
            $this->error('读取数据失败!');
        }
    }

    // 购买礼物查询礼物的价格,数量，算出总价
    public function giftAction(){
        $pid = I('pid');
        $nums = I('nums');
        if (empty($pid) ||  empty($nums)) {
            $this->error('赠送的礼物不存在!');
        }
        $pid = intval($pid);
        $gift = M('t_product(p)')->get(['p.*'], ['p.id' => $pid]);
        if ($gift) {
            $gift['main_pic'] = imageView2($gift['main_pic'],120,120);
            $gift['amount'] = price_format($gift['cur_price']*intval($nums));
            $gift['cur_price'] = price_format($gift['cur_price']);
            $this->success('', '', ['gift'=> $gift]);
        } else {
            $this->error('赠送礼物不存在!');
        }

    }

    //返回订单
    public function ordersAction() {
        $id = I('id');
        if (empty($id)) {
            $this->error('参数为空');
        }
        $limit = I('limit');
        $offset = I('offset');

        $orders = M('t_order(a)')->select(
            [
                '[>]t_product(b)' => ['a.product_id'=>'id']
            ],
            [
                'b.*',
                'a.*',
            ],
            [
                'AND' => [
                    'a.wx_id'=>$id,
                ],
                'LIMIT'=> [$offset,$limit],
                "ORDER" => "a.insert_time DESC",
            ]
        );
        foreach ($orders as &$order){
            $order['main_pic'] = imageView2($order['main_pic'],100,100);
            $order['cur_price'] = price_format($order['cur_price']);
            $order['old_price'] = price_format($order['old_price']);
            $order['amount'] = price_format($order['amount']);
        }


        $this->ajaxReturn($orders);
    }

    // 俱乐部动态 参数几条 api/index/teacherclub
    public function clubTwitterAction() {
        $list = M('t_club_news(cn)')->select(['cn.*'],['LIMIT'=>I('num', '6'),'status'=>1,"ORDER" => "cn.insert_time DESC"]);
        foreach ($list as &$v) {
            $v['cover_id'] = imageView2($v['cover_id'],100,100);
            $v['insert_time'] = substr($v['insert_time'] , 0, 10);
        }
        $this->ajaxReturn($list);
    }

    public function deleteTwitterAction() {
        $id = I('id');
        $model = M('t_club_news');

        if ($model->update(['status'=>-1],['id'=>$id])) {
            $this->ajaxReturn(true);
        } else {
            $this->error(false);
        }
    }

    // 我的俱乐部动态 参数几条 api/index/teacherclub
    public function myClubTwitterAction() {
        $model = M('t_club_news(cn)');
        $id = I('id');
        if (empty($id)){
            $list = $model->select(['cn.*'],[ 'and'=>['status'=>1,],  'LIMIT'=>I('num', '6'), "ORDER" => "cn.insert_time DESC"]);
        } else {
            $list = $model->select(['cn.*'],[ 'and'=>['cid'=>I('id'),'status'=>1,],  'LIMIT'=>I('num', '6'), "ORDER" => "cn.insert_time DESC"]);
        }

        foreach ($list as &$v) {
            $v['cover_id'] = imageView2($v['cover_id'],100,100);
            $v['insert_time'] = substr($v['insert_time'] , 0, 10);
            $v['title'] = subtext($v['title'] , 14);
        }
        $this->ajaxReturn($list);
    }
    
    // 产品推广 api/index/products
    public function productsAction(){
        $list = M('t_product(p)')->select(['p.*'],['and'=>['status'=>1,'type'=>3]]);
        foreach ($list as &$v) {
            $v['cur_price'] = price_format($v['cur_price']);
            $v['old_price'] = price_format($v['old_price']);
            $v['main_pic'] = imageView2($v['main_pic'],360,160);
        }
        $this->ajaxReturn($list);
    }

    // 产品详情 api/index/product 需要提供id参数
    public function productAction(){
        $id = I('id');
        if (empty($id)) {
            $this->error('参数为空');
        }
        $product = M('t_product(p)')->get(['p.*'], ['id' => $id]);
        if ($product) {
            $product['cur_price'] = price_format($product['cur_price']);
        }
        $this->ajaxReturn($product);
    }

    //申请俱乐部
    public function applyAction() {
        $product = M('t_product(p)')->get(['p.*'], ['id' => 1]);
        $product['cur_price'] = price_format($product['cur_price']);
        $product['old_price'] = price_format($product['old_price']);
        $product['main_pic'] = imageView2($product['main_pic'],100,100);
        $this->ajaxReturn($product);
    }

    // 房老师动态详情 api/index/product 需要提供id参数
    public function teacherDetailAction(){
        $id = I('id');
        if (empty($id)) {
            return $this->error('参数为空', '', true);
        }
        $product = $list = M('t_document(a)')->get(
            [
                '[>]t_document_article(b)' => ['a.id'=>'id']
            ],
            [
                'a.*',
                'b.*'
            ],
            [
                'a.id' => $id,
                'LIMIT'=>I('limit', '2'),
                "ORDER" => "a.insert_time DESC",
            ]
        );
        $product['insert_time'] = time_format($product['create_time'], 'Y-m-d');
        $this->ajaxReturn($product);
    }

    // 俱乐部动态详情 api/index/product 需要提供id参数
    public function clubDetailAction(){
        $id = I('id');
        if (empty($id)) {
            return $this->error('参数为空', '', true);
        }
        $product = M('t_club_news(p)')->get(['p.*'], ['id' => $id]);
        $product['insert_time'] = substr($product['insert_time'] , 0, 10);
        //var_dump($product);
        $this->ajaxReturn($product);
    }

    public function thankpicAction() {
        $product = M('t_banner(b)')->get(
            ['b.*'],
            [
                'AND' => [
                    'status'=>1,
                    'type'=>2
                ]
            ]
        );

        $product['pic'] = imageView2($product['pic']);
        $this->ajaxReturn($product);
    }
    
    public function bannerAction() {
        $product = M('t_banner(b)')->select(
            ['b.*'],
            [
                'AND' => [
                    'status'=>1,
                    'type'=>1
                ]
            ]
        );

        foreach ($product as &$v) {
           $v['pic'] = imageView2($v['pic']);
        }


        $this->ajaxReturn($product);
    }

    public function meetAction() {
        $id = I('id');
        if (empty($id)) {
            return $this->error('参数为空', '', true);
        }
        $product = M('t_meeting(m)')->get(['m.*'], ['id'=>$id]);
        $product['pic_url'] = imageView2($product['pic_url']);

        $this->ajaxReturn($product);
    }

    public function meetingAction() {
        $offset = I('offset', 0);
        $limit = I('limit', 10);
        //分页查询
        $list = M('t_meeting(cn)')->select(['cn.*'],['LIMIT'=> [$offset,$limit],'status'=>1, "ORDER" => "cn.insert_time DESC",]);
        foreach ($list as &$v) {
            $v['pic_url'] = imageView2($v['pic_url']);
        }
        $this->ajaxReturn($list);
    }

    //俱乐部创始人信息
    public function founderAction() {
        $id = I('id');
        if (empty($id)) {
            $this->error('参数为空', '', true);
        }

    }

    //修改俱乐部联系电话
    public function editMobileAction() {
        $id = I('club_id');
        $mobile = I('mobile');
        if (empty($id) || empty($mobile)) {
            $this->error('参数为空');
        } else {
           if(M('t_club')->update(['mobile'=>$mobile],['id'=>$id]) >= 0) {
               $this->success('更新成功', '',['data'=>M('t_club(c)')->get(['c.*'],['id'=>$id])]);
           } else {
               $this->error('更新失败');
           }
        }
    }

    //修改俱乐部名称
    public function editAction() {
        $id = I('club_id');
        $club_name = I('club_name');
        if (empty($id) || empty($club_name)) {
            $this->error('参数为空', '', true);
        } else {
            if(M('t_club')->update(['club_name'=>$club_name, 'wx'=> I('wx'),'description'=> I('desc'), 'mobile' => I('mobile')],['id'=>$id]) >= 0) {
                $this->success('更新成功','',['data'=>M('t_club(c)')->get(['c.*'],['id'=>$id])]);
            } else {
                $this->error('更新失败');
            }
        }
    }


    //修改俱乐部描述
    public function editDescAction() {
        $id = I('club_id');
        $desc = I('desc');
        if (empty($id) || empty($desc)) {
            $this->error('参数为空', '', true);
        } else {
            if(M('t_club')->update(['description'=>$desc],['id'=>$id]) >= 0) {
                $this->success('更新成功', '' ,['data'=>M('t_club(c)')->get(['c.*'],['id'=>$id])]);
            } else {
                $this->error('更新失败');
            }
        }
    }

    //修改俱乐部联系电话
    public function editCodeAction() {
        $id = I('club_id');
        $code = I('code');
        if (empty($id) || empty($code)) {
            $this->error('参数为空');
        } else {
            if (M('t_club')->update(['qr_code'=>$code],['id'=>$id])) {
                $this->success('更新成功', '',['data'=>M('t_club(c)')->get(['c.*'],['id'=>$id])]);
            }
            $this->error('更新失败');
        }
    }

    public function clubMemberAction() {
        $id = I('id');
        if (empty($id)) {
            $this->error('参数为空');
        }

        $club_data = M('t_club_member(a)')->select(
            [
                '[>]t_wx_user(b)'=>['a.wx_id'=>'wx_id']
            ],
            ['a.*','b.nickname','b.headimgurl'],
            ['a.cid'=>$id]
        );
        $this->ajaxReturn($club_data);
    }

    //返回俱乐部信息
    public function clubAction() {
        $id = I('id');
        if (empty($id)) {
            $this->error('参数为空');
        }

        $club_data = M('t_club(c)')->get(
            [
                '[>]t_wx_user(wu)'=>['c.wx_id'=>'wx_id']
            ],
            ['c.*','wu.nickname','wu.headimgurl'],
            ['c.wx_id'=>$id]
        );


        $member = M('t_club_member(cm)')->select(
            [
                '[>]t_wx_user(wu)'=>['cm.wx_id'=>'wx_id']
            ],
            [
                'wu.headimgurl',
                'wu.nickname'
            ],
            ['cm.cid'=>$club_data['id']]
        );
        //$club_data['qr_code'] = imageView2($club_data['qr_code']);
        $this->ajaxReturn(['member'=>$member,'club_data'=>$club_data]);
    }


    /// 查询有多少个人送出了多少个礼物
    public function thankAction() {
        $banner =  M('t_banner(b)')->get(
            ['b.*'],
            [
                'AND' => [
                    'status'=>1,
                    'type'=>2
                ]
            ]
        );
        $result = M('t_order')->query('SELECT count(DISTINCT wx_id) as p_nums,sum(product_num) as g_nums FROM t_order  where order_status=\'ok#\' AND pay_status=1 AND order_type=2');

        $data = $result->fetch();
        $data['banner'] = imageView2($banner['pic'],380,120);
        $this->ajaxReturn($data);
    }

    
//    public function clubAction() {
//        $id = I('id');
//        if (empty($id)) {
//            $this->returnData('参数错误');
//        }
//
//        $club = M('t_club(c)')->get(['c.*'],['id'=>$id]);
//        $this->returnData('查询成功',1, $club);
//    }

    public function wxjsAction() {
        $url = I('url');
        $this->ajaxReturn($js_sign = $this->wechat->getJsSign($url));
    }


    public function uploadAction() {
        $id = I('id');
        $tmp_file_content =  $this->wechat->getMedia($id);
        SeasLog::debug('读取到微信服务器的文件' . $tmp_file_content);
        if ($tmp_file_content === false) {
            $this->error('读取微信文件按失败,请重新尝试！');
        } else {
            $tmp_file = '/tmp/weixin_upload.jpg';
            //写入文件失败
            if(file_put_contents($tmp_file, $tmp_file_content) === false) {
                $this->error('写入文件失败,请重新尝试！');
            } else {
                $config = array(
                    'secrectKey'     => 'yetfBK45sGhRSJgYbDCKkCY4sNAhnd8cGPNLR0_V', //七牛服务器
                    'accessKey'      => 'xNgZC-3TPDcYJv8gnRNDKsa9pKQbohKEdReyIK79', //七牛用户
                    'domain'         => '7xqzk2.com1.z0.glb.clouddn.com', //七牛密码
                    'bucket'         => 'lily-picture', //空间名称
                    'timeout'        => 300, //超时时间
                );
                $qiniu = new Qiniu($config);
                if ($qiniu->save2($tmp_file) === false ) {
                    $this->error('保存图片到服务器失败,请重新尝试！');
                } else {
                    SeasLog::debug('上传到七牛的图片地址为：' . $tmp_file);
                    $this->success('成功上传图片', '', ['img_url' => $tmp_file]);
                }
            }
       }
        $this->ajaxReturn($this->wechat->getMedia($id));
    }

    public function addclubtwitterAction() {
        if (IS_POST) {
            $data=I('post.');
            if (empty($data['cid'])) {
                $this->error('请选择要添加到俱乐部');
            }
            if (empty($data['title'])) {
                $this->error('请填写标题');
            }
            if (empty($data['cover_id'])) {
                $this->error('请上传封面');
            }
            if (empty($data['content'])) {
                $this->error('请填写内容');
            }
            $data['insert_time'] = time_format();
            $data['content'] = nl2br($data['content']);
            if($id = M('t_club_news')->insert($data)){
                $this->success('保存成功！');
            }else{
                $this->error('保存失败，请重新再试或联系客服人员！');
            }
        }
    }
    


    
    public function userAction() {
        $id = I('wx_id');
        $user = M('t_wx_user(wu)')->get(
            [
                '[>]t_club(c)'=>['wu.wx_id'=>'wx_id']
            ],
            ['wu.*, c.club_name, c.qr_code'],
            ['wu.wx_id'=>$id]
        );
        
        $this->ajaxReturn($user);
    }

    
    public function addAction(){
        if(IS_POST){
            $data = [];
            $data['title'] = I('title');
            if(empty($data['title'])){
                $this->error('请填写计划书标题！');
            }
            if(length_regex($data['title'],60)){
                $this->error('计划书标题最大允许输入60个字符！');
            }
            $data['category'] = I('category');
            if(empty($data['category'])){
                $this->error('请选择计划书分类！');
            }
            $data['logo'] = I('logo');
            if(empty($data['logo'])){
                $this->error('请上传计划书封面！');
            }
            $data['file'] = I('plan_file');
            if(empty($data['file'])){
                $this->error('请上传计划书附件！');
            }
            $data['description'] = I('description');
            if(empty($data['description'])){
                $this->error('请上传计划书附件！');
            }
            if(length_regex($data['description'],5000)){
                $this->error('计划书详细描述最大允许输入5000个字符！');
            }

            $data['student_id'] = $this->user['user_id'];
            $data['insert_time'] = time_format();
            if(M('t_business_plan')->insert($data)){
                $this->success('保存成功！',U('/'));
            }else{
                $this->error('保存失败，请重新再试或联系客服人员！');
            }
        }

        $cate_list = [];
        foreach(M('t_category')->select(['id','pid','title'],['status'=>1]) as $item){
            $cate_list[$item['pid']][$item['id']] = $item['title'];
        }
        $this->assign('cate_list',$cate_list);
        $this->layout->title = '上传计划书';
    }



    public function signAction(){
        if(is_not_wx()){
            $this->error('本功能仅允许在微信内使用！');
        }

        if(empty($this->user['uid'])){
            $this->error('您还没有绑定运营账号！',U('/public/bind'),['btn_text'=>'去绑定']);
        }
        if($this->user['group_id'] != 1){
            $this->error('本功能仅允许运营人员使用！');
        }
        $query = M()->query("select id,title,address from t_meeting where date(agenda_date) = '".date('Y-m-d')."'");
        $list = $query ? $query->fetchAll(PDO::FETCH_ASSOC) : false;
        if(empty($list)){
            $this->error('啊哈，今天没有任何会议哦！');
        }
        $meeting = $list[0];

        if(IS_POST){
            $enroll_id = intval(I('enroll_id'));

            if(empty(I('enroll_id'))){
                $this->error('参数错误，报名ID不能为空！');
            }
            if(M('t_enroll')->update(['is_sign'=>Model::BOOL_YES,'sign_time'=>time_format()],['AND'=>['id'=>$enroll_id,'meeting_id'=>$meeting['id'],'is_affirm'=>Model::BOOL_YES]])){
                $this->success('签到成功！');
            }else{
                $this->error('签到失败，请重新再试或联系管理人员！');
            }
        }

        $id = intval(I('enroll_id'));
        if(!empty($id)){
            $item = M('t_enroll(a)')->get(
                [
                    '[><]t_company_reg(b)'=>['a.id'=>'eid'],
                ],
                [
                    'a.id',
                    'a.mobile',
                    'a.create_time',
                    'a.is_affirm',
                    'a.is_sign',
                    'b.chairman_name',
                    'b.sex',
                    'b.company_name',
                ],
                [
                        'AND'=>['a.id'=>$id,'meeting_id'=>$meeting['id']]
                ]);

            if(empty($item)){
                $this->error('没有找到报名记录！');
            }

            if($item['is_affirm'] != Model::BOOL_YES){
                $this->error('此报名还没经过确认！');
            }
            if($item['is_sign'] == Model::BOOL_YES){
                $this->error('此报名已经签到过，无需重复签到！');
            }
            $this->assign('item',$item);
        }
        if(!is_not_wx()){
            $js_ticket = $this->wechat->getJsTicket();
            if (!$js_ticket) {
                echo "获取js_ticket失败！<br>";
                echo '错误码：'.$this->wechat->errCode;
                echo ' 错误原因：'.ErrCode::getErrText($this->wechat->errCode);
                exit;
            }

            $url = DOMAIN.$_SERVER['REQUEST_URI'];
            $js_sign = $this->wechat->getJsSign($url);
            $this->assign('js_sign',$js_sign);
        }

        $this->assign('meeting',$meeting);
    }

    public function searchAction(){

        $keyword = I('keyword');
        if(empty($keyword)){
            $this->error('请输入手机号码！');
        }
        $meeting_id = intval(I('meeting_id'));

        $list = M('t_enroll(a)')->select(
            [
                '[><]t_company_reg(b)'=>['a.id'=>'eid'],
            ],
            [
                'a.id',
                'a.mobile',
                'a.create_time',
                'b.chairman_name',
                'b.sex',
                'b.company_name',
            ],
            [
                'AND'=>[
                    'a.meeting_id'=>$meeting_id,
                    'a.is_affirm'=>Model::BOOL_YES,
                    'a.is_sign'=>Model::BOOL_NO,
                    'a.mobile[~]'=>$keyword,
                ]
            ]);
//        SeasLog::info(M()->last_query());
        $this->success('','',['list'=>$list]);
    }

    public function meetingsAction() {
        $list = M('t_meeting(a)')->select(
            ['a.*'],
            [
                'AND' => [
                    'a.agenda_date[>=]' => time_format()
                ]
            ]
        );
        $this->assign('list', $list);
        $this->layout->setLayoutFile(null);
    }
}
